language: c
sudo: false

cache:
  directories:
    - $HOME/.cabsnap
    - $HOME/.cabal/packages

compiler: ": # ghc-$GHCVER cabal-$CABALVER $STACKAGESNAPSHOT $CABALCONFIG $CABALFLAGS"

addons:
  apt:
    sources:
      - hvr-ghc
    packages:
      - cabal-install-$CABALVER
      - ghc-$GHCVER
      - libgmp-dev

before_install:
  # cleanup compiler hack
  - unset CC
  # ghc
  - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH
  # versions
  - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - cabal --version
  - ghc --version
  - if [ "$NOTESTS" = "YES" ]; then
      export CABALCONFOPTS="$CABALFLAGS";
      export CABALTEST="true";
    else
      export CABALCONFOPTS="$CABALFLAGS --enable-tests --enable-benchmarks";
      export CABALTEST="cabal test";
    fi
  - if [ "$PEDANTIC" = "YES" ]; then
      export CABALBUILDOPTS="--ghc-options=-Werror --ghc-options=-Wall";
    fi

install:
  - sh multi-ghc-install.sh

script:
  - if [ -f configure.ac ]; then autoreconf -i; fi
  # -v2 provides useful information for debugging
  - cabal configure $CABALCONFOPTS -v2
  - cabal build $CABALBUILDOPTS
  - $CABALTEST
  - if [ "$CABALVER" = "1.22" ]; then cabal check; fi
  # tests that a source-distribution can be generated
  - cabal sdist

  # check that the generated source-distribution can be built & installed
  - SRC_TGZ=$(cabal info . | awk '{print $2;exit}').tar.gz &&
    (cd dist && cabal install --constraint='integer-simple installed' --force-reinstalls $CABALFLAGS "$SRC_TGZ")

before_cache:
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.tar
